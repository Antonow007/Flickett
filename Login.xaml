<Window x:Class="Flickett.Login"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Flickett"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        Background="Transparent"
        AllowsTransparency="True"
        ResizeMode="NoResize"
        mc:Ignorable="d"
        Title="Login" Height="454" Width="804">

    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Image}"/>
    </Window.Resources>

    <Border CornerRadius="15" BorderBrush="#FF333333" BorderThickness="6"  >

        <Grid Background="#FF333333" RenderTransformOrigin="0.463,0.587">


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="381*"/>
                <ColumnDefinition Width="469*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1" VerticalAlignment="Top" Height="30" HorizontalAlignment="Right" Width="230" Margin="0,5,5,0" >
                <!--Close Button-->
                <Button Width="26" Margin="200,0,6,0" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Name="CloseButton" Click="CloseButton_Click">
                    <Image Source="C:\Users\anton\source\repos\Flickett\Resources\Images\bigger red button.png"/>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Opacity" Value="1"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <!--Maximize Button-->
                <Button Width="26" Margin="170,0,32,0" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Name="MaximizeButton" Click="MaximizeButton_Click">
                    <Image Source="C:\Users\anton\source\repos\Flickett\Resources\Images\bigger yellow button.png"/>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Opacity" Value="1"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <!--Minimite Button-->
                <Button Width="26" Margin="125,0,44,0" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Name="MinimizeButton" Click="MinimizeButton_Click">
                    <Image Source="C:\Users\anton\source\repos\Flickett\Resources\Images\bigger green button.png"/>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Opacity" Value="1"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

            </Grid>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="100*"/>
                    <RowDefinition Height="69*"/>
                    <RowDefinition Height="42.97"/>
                    <RowDefinition Height="74"/>
                    <RowDefinition Height="Auto" MinHeight="36"/>
                    <RowDefinition Height="84"/>
                    <RowDefinition Height="78*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Flickett" TextAlignment="Center" FontSize="30" Margin="0,17,0,0" Height="39" Grid.Row="1" Width="173" Foreground="White" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top"/>

                <TextBox CaretBrush="White" Grid.Row="2" BorderThickness="0,0,0,2" Width="300" Height="30"
                 FontSize="20" HorizontalAlignment="Center" TextChanged="UsernameTextBox_TextChanged"
                 VerticalContentAlignment="Center" BorderBrush="White" Name="UsernameTextBox" Margin="0,10,0,1" Foreground="White" Background="Transparent"/>
                <TextBlock Name="loginUsernamePlaceholder" Grid.Row="2" FontSize="16" FontWeight="Light" Foreground="DarkGray" VerticalAlignment="Center" 
            Margin="29,0,0,0" Panel.ZIndex="-1" Text="Usename"/>
                <Button Style="{DynamicResource ButtonStyle1}"  Grid.Row="2" Name="loginUsernameClear" Width="50" HorizontalAlignment="Right" Content="X"
                      Background="Transparent" Foreground="LightGray" BorderThickness="0" Margin="0,0,29,0" Click="loginUsernameClear_Click" />



                <PasswordBox BorderBrush="White" CaretBrush="White" Grid.Row="3" BorderThickness="0,0,0,2" Width="300" Height="30" FontSize="20" Name="PasswordBox" Background="Transparent" 
                         VerticalContentAlignment="Center" Foreground="White" PasswordChanged="PasswordBox_PasswordChanged"/>
                <TextBlock Name="loginPasswordPlaceholder" Grid.Row="3" FontSize="16" FontWeight="Light" Foreground="DarkGray" VerticalAlignment="Center" 
                       Margin="29,0,0,0" Panel.ZIndex="-1" Text="Password"/>
                <Button Style="{DynamicResource ButtonStyle2}"  Grid.Row="3" Name="loginPasswordClear" Width="50" HorizontalAlignment="Right" Content="X"
                     Background="Transparent" Foreground="LightGray" BorderThickness="0" Margin="0,0,29,0" Click="loginPasswordClear_Click"/>

                <Grid Grid.Row="4" Margin="0,14,0,4">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <CheckBox Content="Rember me" FontSize="10" VerticalAlignment="Center" HorizontalAlignment="Right" Width="150" Margin="0,3,0,0" Foreground="White"/>
                    <TextBlock Grid.Column="1" Margin="50,0,0,-1" HorizontalAlignment="Left" Width="112" Foreground="White">
              <Hyperlink Click="ForgotPasswordClick" Foreground="White"  TextDecorations="None">Forgot Password ?</Hyperlink>
                    </TextBlock>

                </Grid>

                <Button Grid.Row="5" VerticalAlignment="Top" HorizontalAlignment="Center" Height="40" Width="200" Content="Login" 
                FontSize="25" Margin="0,20,0,0" Click="Button_Click"/>

                <TextBlock Grid.Row="5" Height="16" VerticalAlignment="Top" HorizontalAlignment="Center" Width="167" Margin="0,64,0,0" Foreground="White">
             <Run Text="Don't have an account?"/>
             <Hyperlink Click="SignUp_Click" Foreground="White" TextDecorations="None">
             <Run Text="Sign up"/>
             </Hyperlink>
                </TextBlock>

            </Grid>

        </Grid>
    </Border>

</Window>
